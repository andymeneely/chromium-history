{"description":"cc: Drop ContextProvider references on the impl thread before quitting\n\nWhen passing a TextureMailbox from the impl thread out to the cc\nembedder on the main thread, we need to keep a ref on the ContextProvider\nthat owns the texture in the mailbox, to keep the mailbox alive while\nthe embedder is receiving it.\n\nHowever if the compositor shutsdown and the impl thread goes away, we\nmust have already dropped the ref on the ContextProvider or it will be\ndestroyed (a) on the wrong thread and (b) after the global GPU process\nobjects it holds pointers to have been destroyed. Crash will occur.\n\nSo, we add a TextureMailboxDeleter class that the GLRenderer uses to\ngenerate a TextureMailbox release callback for the main thread instead\nof rolling its own thing. The TMDeleter class' lifetime is bounded by\nthe life of the compositor instance on the impl thread, so it is\ndestroyed before the impl thread is joined. And when it is destroyed it\ndeletes the textures it was meant to destroy, and drops its ref on the\ncontext provider.\n\nBUG=283625\nR=piman\n\nCommitted: https://src.chromium.org/viewvc/chrome?view=rev&revision=222207","cc":["chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"reviewers":["piman@chromium.org"],"messages":[{"sender":"danakj@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"","disapproval":false,"date":"2013-09-06 20:41:01.505530","approval":false},{"sender":"danakj@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"ping","disapproval":false,"date":"2013-09-09 14:37:43.541480","approval":false},{"sender":"piman@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"lgtm","disapproval":false,"date":"2013-09-09 20:51:52.269690","approval":true},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/danakj@chromium.org/23454014/9001","disapproval":false,"date":"2013-09-09 20:54:20.578190","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"Failed to apply patch for cc/output/gl_renderer.cc:\nWhile running patch -p1 --forward --force --no-backup-if-mismatch;\n  patching file cc/output/gl_renderer.cc\n  Hunk #2 FAILED at 127.\n  Hunk #3 FAILED at 148.\n  Hunk #4 succeeded at 2184 (offset 13 lines).\n  Hunk #5 succeeded at 2227 (offset 13 lines).\n  2 out of 5 hunks FAILED -- saving rejects to file cc/output/gl_renderer.cc.rej\n\nPatch:       cc/output/gl_renderer.cc\nIndex: cc/output/gl_renderer.cc\ndiff --git a/cc/output/gl_renderer.cc b/cc/output/gl_renderer.cc\nindex a80feac4ecc9f97f3fd5e731d99a43cc7ea98a99..b0355063d183ff87ad905586d9e209ae299f5d48 100644\n--- a/cc/output/gl_renderer.cc\n+++ b/cc/output/gl_renderer.cc\n@@ -33,6 +33,7 @@\n #include \"cc/resources/layer_quad.h\"\n #include \"cc/resources/scoped_resource.h\"\n #include \"cc/resources/sync_point_helper.h\"\n+#include \"cc/resources/texture_mailbox_deleter.h\"\n #include \"cc/trees/damage_tracker.h\"\n #include \"cc/trees/proxy.h\"\n #include \"cc/trees/single_thread_proxy.h\"\n@@ -126,13 +127,18 @@ struct GLRenderer::PendingAsyncReadPixels {\n   DISALLOW_COPY_AND_ASSIGN(PendingAsyncReadPixels);\n };\n \n-scoped_ptr<GLRenderer> GLRenderer::Create(RendererClient* client,\n-                                          OutputSurface* output_surface,\n-                                          ResourceProvider* resource_provider,\n-                                          int highp_threshold_min,\n-                                          bool use_skia_gpu_backend) {\n-  scoped_ptr<GLRenderer> renderer(new GLRenderer(\n-      client, output_surface, resource_provider, highp_threshold_min));\n+scoped_ptr<GLRenderer> GLRenderer::Create(\n+    RendererClient* client,\n+    OutputSurface* output_surface,\n+    ResourceProvider* resource_provider,\n+    TextureMailboxDeleter* texture_mailbox_deleter,\n+    int highp_threshold_min,\n+    bool use_skia_gpu_backend) {\n+  scoped_ptr<GLRenderer> renderer(new GLRenderer(client,\n+                                                 output_surface,\n+                                                 resource_provider,\n+                                                 texture_mailbox_deleter,\n+                                                 highp_threshold_min));\n   if (!renderer->Initialize())\n     return scoped_ptr<GLRenderer>();\n   if (use_skia_gpu_backend) {\n@@ -147,11 +153,13 @@ scoped_ptr<GLRenderer> GLRenderer::Create(RendererClient* client,\n GLRenderer::GLRenderer(RendererClient* client,\n                        OutputSurface* output_surface,\n                        ResourceProvider* resource_provider,\n+                       TextureMailboxDeleter* texture_mailbox_deleter,\n                        int highp_threshold_min)\n     : DirectRenderer(client, output_surface, resource_provider),\n       offscreen_framebuffer_id_(0),\n       shared_geometry_quad_(gfx::RectF(-0.5f, -0.5f, 1.0f, 1.0f)),\n       context_(output_surface->context_provider()->Context3d()),\n+      texture_mailbox_deleter_(texture_mailbox_deleter),\n       is_backbuffer_discarded_(false),\n       discard_backbuffer_when_not_visible_(false),\n       is_using_bind_uniform_(false),\n@@ -2170,31 +2178,6 @@ void GLRenderer::GetFramebufferPixels(void* pixels, gfx::Rect rect) {\n                          AsyncGetFramebufferPixelsCleanupCallback());\n }\n \n-static void DeleteTextureReleaseCallbackOnImplThread(\n-    const scoped_refptr<ContextProvider>& context_provider,\n-    unsigned texture_id,\n-    unsigned sync_point,\n-    bool lost_resource) {\n-  if (sync_point)\n-    context_provider->Context3d()->waitSyncPoint(sync_point);\n-  context_provider->Context3d()->deleteTexture(texture_id);\n-}\n-\n-static void DeleteTextureReleaseCallback(\n-    const scoped_refptr<base::SingleThreadTaskRunner>& task_runner,\n-    const scoped_refptr<ContextProvider>& context_provider,\n-    unsigned texture_id,\n-    unsigned sync_point,\n-    bool lost_resource) {\n-  task_runner->PostTask(\n-      FROM_HERE,\n-      base::Bind(&DeleteTextureReleaseCallbackOnImplThread,\n-                 context_provider,\n-                 texture_id,\n-                 sync_point,\n-                 lost_resource));\n-}\n-\n void GLRenderer::GetFramebufferPixelsAsync(\n     gfx::Rect rect, scoped_ptr<CopyOutputRequest> request) {\n   DCHECK(!request->IsEmpty());\n@@ -2238,10 +2221,8 @@ void GLRenderer::GetFramebufferPixelsAsync(\n     sync_point = context_->insertSyncPoint();\n     scoped_ptr<TextureMailbox> texture_mailbox = make_scoped_ptr(\n         new TextureMailbox(mailbox,\n-                           base::Bind(&DeleteTextureReleaseCallback,\n-                                      base::MessageLoopProxy::current(),\n-                                      output_surface_->context_provider(),\n-                                      texture_id),\n+                           texture_mailbox_deleter_->GetReleaseCallback(\n+                               output_surface_->context_provider(), texture_id),\n                            GL_TEXTURE_2D,\n                            sync_point));\n     request->SendTextureResult(window_rect.size(), texture_mailbox.Pass());","disapproval":false,"date":"2013-09-09 20:54:27.295330","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/danakj@chromium.org/23454014/18001","disapproval":false,"date":"2013-09-09 21:08:50.067540","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"Failed to apply patch for cc/output/gl_renderer.cc:\nWhile running patch -p1 --forward --force --no-backup-if-mismatch;\n  patching file cc/output/gl_renderer.cc\n  Hunk #2 FAILED at 127.\n  Hunk #3 FAILED at 148.\n  Hunk #4 succeeded at 2184 (offset 2 lines).\n  Hunk #5 succeeded at 2227 (offset 2 lines).\n  2 out of 5 hunks FAILED -- saving rejects to file cc/output/gl_renderer.cc.rej\n\nPatch:       cc/output/gl_renderer.cc\nIndex: cc/output/gl_renderer.cc\ndiff --git a/cc/output/gl_renderer.cc b/cc/output/gl_renderer.cc\nindex f19f4415f37de38b2f6d940aad733b9c81f77bbb..19085e2a9ce1a72717896abe42c93b194dddabae 100644\n--- a/cc/output/gl_renderer.cc\n+++ b/cc/output/gl_renderer.cc\n@@ -33,6 +33,7 @@\n #include \"cc/resources/layer_quad.h\"\n #include \"cc/resources/scoped_resource.h\"\n #include \"cc/resources/sync_point_helper.h\"\n+#include \"cc/resources/texture_mailbox_deleter.h\"\n #include \"cc/trees/damage_tracker.h\"\n #include \"cc/trees/proxy.h\"\n #include \"cc/trees/single_thread_proxy.h\"\n@@ -126,13 +127,18 @@ struct GLRenderer::PendingAsyncReadPixels {\n   DISALLOW_COPY_AND_ASSIGN(PendingAsyncReadPixels);\n };\n \n-scoped_ptr<GLRenderer> GLRenderer::Create(RendererClient* client,\n-                                          OutputSurface* output_surface,\n-                                          ResourceProvider* resource_provider,\n-                                          int highp_threshold_min,\n-                                          bool use_skia_gpu_backend) {\n-  scoped_ptr<GLRenderer> renderer(new GLRenderer(\n-      client, output_surface, resource_provider, highp_threshold_min));\n+scoped_ptr<GLRenderer> GLRenderer::Create(\n+    RendererClient* client,\n+    OutputSurface* output_surface,\n+    ResourceProvider* resource_provider,\n+    TextureMailboxDeleter* texture_mailbox_deleter,\n+    int highp_threshold_min,\n+    bool use_skia_gpu_backend) {\n+  scoped_ptr<GLRenderer> renderer(new GLRenderer(client,\n+                                                 output_surface,\n+                                                 resource_provider,\n+                                                 texture_mailbox_deleter,\n+                                                 highp_threshold_min));\n   if (!renderer->Initialize())\n     return scoped_ptr<GLRenderer>();\n   if (use_skia_gpu_backend) {\n@@ -147,11 +153,13 @@ scoped_ptr<GLRenderer> GLRenderer::Create(RendererClient* client,\n GLRenderer::GLRenderer(RendererClient* client,\n                        OutputSurface* output_surface,\n                        ResourceProvider* resource_provider,\n+                       TextureMailboxDeleter* texture_mailbox_deleter,\n                        int highp_threshold_min)\n     : DirectRenderer(client, output_surface, resource_provider),\n       offscreen_framebuffer_id_(0),\n       shared_geometry_quad_(gfx::RectF(-0.5f, -0.5f, 1.0f, 1.0f)),\n       context_(output_surface->context_provider()->Context3d()),\n+      texture_mailbox_deleter_(texture_mailbox_deleter),\n       is_backbuffer_discarded_(false),\n       discard_backbuffer_when_not_visible_(false),\n       is_using_bind_uniform_(false),\n@@ -2181,31 +2189,6 @@ void GLRenderer::GetFramebufferPixels(void* pixels, gfx::Rect rect) {\n                          AsyncGetFramebufferPixelsCleanupCallback());\n }\n \n-static void DeleteTextureReleaseCallbackOnImplThread(\n-    const scoped_refptr<ContextProvider>& context_provider,\n-    unsigned texture_id,\n-    unsigned sync_point,\n-    bool lost_resource) {\n-  if (sync_point)\n-    context_provider->Context3d()->waitSyncPoint(sync_point);\n-  context_provider->Context3d()->deleteTexture(texture_id);\n-}\n-\n-static void DeleteTextureReleaseCallback(\n-    const scoped_refptr<base::SingleThreadTaskRunner>& task_runner,\n-    const scoped_refptr<ContextProvider>& context_provider,\n-    unsigned texture_id,\n-    unsigned sync_point,\n-    bool lost_resource) {\n-  task_runner->PostTask(\n-      FROM_HERE,\n-      base::Bind(&DeleteTextureReleaseCallbackOnImplThread,\n-                 context_provider,\n-                 texture_id,\n-                 sync_point,\n-                 lost_resource));\n-}\n-\n void GLRenderer::GetFramebufferPixelsAsync(\n     gfx::Rect rect, scoped_ptr<CopyOutputRequest> request) {\n   DCHECK(!request->IsEmpty());\n@@ -2249,10 +2232,8 @@ void GLRenderer::GetFramebufferPixelsAsync(\n     sync_point = context_->insertSyncPoint();\n     scoped_ptr<TextureMailbox> texture_mailbox = make_scoped_ptr(\n         new TextureMailbox(mailbox,\n-                           base::Bind(&DeleteTextureReleaseCallback,\n-                                      base::MessageLoopProxy::current(),\n-                                      output_surface_->context_provider(),\n-                                      texture_id),\n+                           texture_mailbox_deleter_->GetReleaseCallback(\n+                               output_surface_->context_provider(), texture_id),\n                            GL_TEXTURE_2D,\n                            sync_point));\n     request->SendTextureResult(window_rect.size(), texture_mailbox.Pass());","disapproval":false,"date":"2013-09-09 21:08:56.198430","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/danakj@chromium.org/23454014/22001","disapproval":false,"date":"2013-09-09 22:07:03.638510","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"Retried try job too often on win7_aura for step(s) interactive_ui_tests\nhttp://build.chromium.org/p/tryserver.chromium/buildstatus?builder=win7_aura&number=76969","disapproval":false,"date":"2013-09-10 00:19:16.746610","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/danakj@chromium.org/23454014/22001","disapproval":false,"date":"2013-09-10 04:43:04.940210","approval":false},{"sender":"commit-bot@chromium.org","recipients":["danakj@chromium.org","piman@chromium.org","chromium-reviews@chromium.org","joi+watch-content@chromium.org","darin-cc@chromium.org","cc-bugs@chromium.org","jam@chromium.org","jbauman@chromium.org"],"text":"Change committed as 222207","disapproval":false,"date":"2013-09-10 08:25:17.561620","approval":false}],"owner_email":"danakj@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src","owner":"danakj","subject":"cc: Drop ContextProvider references on the impl thread before quitting","created":"2013-09-06 19:42:34.056710","patchsets":[1,5001,9001,18001,22001],"modified":"2013-09-10 08:25:17.910050","closed":true,"commit":false,"issue":23454014}