{"description":"Remove the AudioManager singleton.\n\nUnit tests now instantiate their own AudioManager and can choose to\nuse the default one or provide their own mock implementation without\nhaving to worry about conflicting with the singleton.\n\nThe teardown sequence of the AudioManager and its thread has been cleaned\nup significantly and I don't think it has been completely tested before as\nthe audio thread was terminated before all objects that belonged to the\nthread had a chance to do cleanup.  The AudioManager unit tests do not use\nthe actual audio thread, so this part seems to have been left out.\n\nIn Chrome, the AudioManager instance is now owned by BrowserProcessImpl\nand always constructed on the UI thread.  This instance is then shared\nin the same way that several other 'manager' type objects are shared to\n'content' code, via content::ResourceContext.  Audio specific classes\ndo though receive a direct pointer to the AudioManager and are required\nto do proper reference counting if they need to hold onto the instance.\nI chose to use the ResourceContext rather than direct use of g_browser_process\nto avoid requiring another singleton when writing relatively simple tests\nthat touch the AudioManager.\n\nI added a couple of safeguards to guard against future regressions:\n- Not more than one instance of the AudioManager should be created.\n- The AudioManager should not be addrefed by its own thread.  This\n  can basically become a circular reference and prevent deterministic\n  shutdown.\n\nReviewers:  Of course you're free to review everything,\nbut here's the breakdown in terms of the bare minimum from\nthe standpoint of \"Owners approval\".  I'm asking Henrik to be the\nmain reviewer of the entire patch (sorry!).\n\nHenrik: Everything minus the below, but it would be great if you could\n        take a look at the whole thing, specifically media/audio.\n\nPawel:  I'd like you to take a generic look at this approach.\n        The key areas as far as the singleton itself goes are in\n        media/audio/audio_manager[_base].* and\n        chrome/browser/browser_process*.*\n\nSatish: content/browser/speech/*\n        media/audio/audio_manager_base.* (new reference counting code)\n\nAndrew: content/browser/renderer_host/media/*\n        content/renderer/media/webrtc_audio_device_unittest.cc (Owner)\n\nAvi:    content/browser/renderer_host/render_process_host_impl.cc\n        content/browser/resource_context.*\n\nWilliam: chrome/browser/profiles/profile_io_data.cc\n\t chrome/browser/browser_process*.*\n\nRobert:  This is basically a heads up. I hope that I didn't break the OpenBSD\n         implementation, but unfortunately I have no way of knowing for sure.\n\nShijing: Please take a look at AudioManagerLinux.  I replaced the set of\n         active streams with a simple counter.\n\nBUG=105249\nTEST=content_unittests, media_unittests, browser_tests.\nCommitted: http://src.chromium.org/viewvc/chrome?view=rev&revision=114084","cc":["chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"reviewers":["henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com"],"messages":[{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"","disapproval":false,"date":"2011-12-06 14:20:38.323094","approval":false},{"sender":"robert.nagy@gmail.com","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"On 2011/12/06 14:20:38, tommi wrote:\n\nDon't worry about the OpenBSD build, I will fix it if needed after this gets commited.","disapproval":false,"date":"2011-12-06 14:25:45.524007","approval":false},{"sender":"avi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"I'm happy with the content/browser/renderer_host/render_process_host_impl.cc changes with the style issues noted below.\n\nI don't know about content/browser/resource_context.* Talk to willchan.\n\nhttp://codereview.chromium.org/8818012/diff/1/content/browser/renderer_host/render_process_host_impl.cc\nFile content/browser/renderer_host/render_process_host_impl.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/1/content/browser/renderer_host/render_process_host_impl.cc#newcode478\ncontent/browser/renderer_host/render_process_host_impl.cc:478: channel_->AddFilter(new AudioInputRendererHost(\nunwrap this and subsequent lines where wrapping is no longer needed","disapproval":false,"date":"2011-12-06 15:22:59.404612","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Thanks Avi - sorry, the 'content/browser/resource_context.*' bit was indeed meant for willchan.\n\nhttp://codereview.chromium.org/8818012/diff/1/content/browser/renderer_host/render_process_host_impl.cc\nFile content/browser/renderer_host/render_process_host_impl.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/1/content/browser/renderer_host/render_process_host_impl.cc#newcode478\ncontent/browser/renderer_host/render_process_host_impl.cc:478: channel_->AddFilter(new AudioInputRendererHost(\nOn 2011/12/06 15:22:59, Avi wrote:\n> unwrap this and subsequent lines where wrapping is no longer needed\n\nDone.","disapproval":false,"date":"2011-12-06 15:48:20.677129","approval":false},{"sender":"avi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"NP.\n\nOnce you have everyone's OK, I'm ready to rubberstamp as needed for content.","disapproval":false,"date":"2011-12-06 16:09:08.207207","approval":false},{"sender":"henrika@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Impressive stuff Tommi. It will take some time to digest this CL but I have one initial question (see comment).\n\nhttp://codereview.chromium.org/8818012/diff/1/media/audio/audio_manager.cc\nFile media/audio/audio_manager.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/1/media/audio/audio_manager.cc#newcode11\nmedia/audio/audio_manager.cc:11: // Used only to make sure we never create more than one instance.\nI have read the comment but still don't understand why this global handle is needed? What type of situation are you protecting us from here?","disapproval":false,"date":"2011-12-06 16:53:28.532321","approval":false},{"sender":"willchan@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"http://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc\nFile content/browser/resource_context.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc#newcode184\ncontent/browser/resource_context.cc:184: // The AudioManager isn't necessarily initialized with other\nCan you explain this comment? When is AudioManager initialized then? And why isn't there a DCHECK(BrowserThread::CurrentlyOn(BrowserThread::IO))?","disapproval":false,"date":"2011-12-06 17:02:12.267551","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","phajdan.jr@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"http://codereview.chromium.org/8818012/diff/1/media/audio/audio_manager.cc\nFile media/audio/audio_manager.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/1/media/audio/audio_manager.cc#newcode11\nmedia/audio/audio_manager.cc:11: // Used only to make sure we never create more than one instance.\nOn 2011/12/06 16:53:28, henrika1 wrote:\n> I have read the comment but still don't understand why this global handle is\n> needed? What type of situation are you protecting us from here?\n\nThis is a safeguard to make sure that there exists never more than one instance of the AudioManager.  This variable is not exposed or used for anything other than to check if there already exists an instance and catch the programmer error early.\nThe checks are in the constructor and destructor.  The check in AudioManager::Create isn't really necessary, but I put it there in case anyone would ever return an \"AudioManager\" that does not derive from the AudioManager class.\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc\nFile content/browser/resource_context.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc#newcode184\ncontent/browser/resource_context.cc:184: // The AudioManager isn't necessarily initialized with other\nOn 2011/12/06 17:02:12, willchan wrote:\n> Can you explain this comment? When is AudioManager initialized then? And why\n> isn't there a DCHECK(BrowserThread::CurrentlyOn(BrowserThread::IO))?\n\nSorry, this comment isn't correct. I must have forgotten to update it since an early version of the cl.  I'll fix it.\n\nWhen Chrome runs, the audio manager instance is created and owned by the BrowserProcessImpl class.  This always happens on the IO thread and (as you no doubt know) there is a check inside EnsureInitialized() for that.\nWhat's different here though, and the reason why there isn't a dcheck here like with the other accessors, is that the audio_manager accessor can be called on other threads than the IO thread.  I suspect that the reason for this is historical since the AudioManager was a singleton with an undefined threading model and anyone could call the instance method at any time and on any thread.","disapproval":false,"date":"2011-12-06 20:28:48.067278","approval":false},{"sender":"phajdan.jr@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"I took a brief look, seems fine. I don't know most of the code in this CL so I've removed myself from reviewers.\n\nThank you for working on this!","disapproval":false,"date":"2011-12-07 09:18:10.798813","approval":false},{"sender":"henrika@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Focused on the manager as such and how it is used in the media/audio unit tests.\n\nMust say that it looks great! It is so much nicer without the singleton. Readability and code design is highly improved.\n\nWill check the more complex tests in content renderer next and also take a \"AudioManager usage in Chrome\" round.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nnit, indent two more?\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager.h#newcode39\nmedia/audio/audio_manager.h:39: // TODO(cpu): Define threading requirements for interacting with AudioManager.\nStill a valid comment?\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc\nFile media/audio/audio_manager_base.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode25\nmedia/audio/audio_manager_base.cc:25: #ifndef NDEBUG\nPlease add some comments here to explain the purpose of your checks. Thanks.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode40\nmedia/audio/audio_manager_base.cc:40: CHECK(audio_thread_.Start());\nAny point in checking Initialized() here to ensure that the thread is running?\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode77\nmedia/audio/audio_manager_base.cc:77: base::AtomicRefCountInc(&num_active_input_streams_);\nNice!\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode100\nmedia/audio/audio_manager_base.cc:100: // Stop() will wait for any posted messages to be processed first.\nCan you add some more information here please. You post a task on the audio thread and then closes the same thread directly after. Even if your design works; is it a good design? To me it feels a bit advanced. Can't it be simplified or can you use any alternative method? If not, why?\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_controller.h\nFile media/audio/audio_output_controller.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_controller.h#newcode247\nmedia/audio/audio_output_controller.h:247: // Used to post delayed tasks to ourselves that we can cancel.\nCan you add some more details on why you had to introduce this pattern. It is not obvious why it is required. Perhaps add some extended comments in this area in the actual header?\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_controller_unittest.cc\nFile media/audio/audio_output_controller_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_controller_unittest.cc#newcode104\nmedia/audio/audio_output_controller_unittest.cc:104: AudioOutputController::Create(audio_manager.get(), &event_handler, params,\nSo much nicer to inject the manager here. All magic is now gone ;-) Thanks!\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc\nFile media/audio/audio_output_dispatcher.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc#newcode22\nmedia/audio/audio_output_dispatcher.cc:22: ALLOW_THIS_IN_INITIALIZER_LIST(weak_this_(this)),\nNot sure why this is needed.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.h\nFile media/audio/audio_output_dispatcher.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.h#newcode101\nmedia/audio/audio_output_dispatcher.h:101: // Used to post delayed tasks to ourselves that we can cancel.\nNit, empty line above comment.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_proxy.cc\nFile media/audio/audio_output_proxy.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_proxy.cc#newcode92\nmedia/audio/audio_output_proxy.cc:92: // Delete the object now like is done in the Close() implementation of\nHave to trust you on this part. Don't know the details well enough to comment ;-)","disapproval":false,"date":"2011-12-07 10:08:34.123841","approval":false},{"sender":"henrika@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Checked WebRTC unit test and files in browser/render_host as well.\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/renderer_host/media/audio_input_renderer_host.cc\nFile content/browser/renderer_host/media/audio_input_renderer_host.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/renderer_host/media/audio_input_renderer_host.cc#newcode249\ncontent/browser/renderer_host/media/audio_input_renderer_host.cc:249: resource_context_->audio_manager(),\nDo we need the full resource context here or can we inject only the manager instead?\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/renderer/media/webrtc_audio_device_unittest.cc\nFile content/renderer/media/webrtc_audio_device_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/renderer/media/webrtc_audio_device_unittest.cc#newcode352\ncontent/renderer/media/webrtc_audio_device_unittest.cc:352: 2000);\nYou will get a comment from Andrew on this one ;-)\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc\nFile content/test/webrtc_audio_device_test.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc#newcode131\ncontent/test/webrtc_audio_device_test.cc:131: // Kick of the cleanup process by closing channel. This queues up\nthe","disapproval":false,"date":"2011-12-07 10:26:43.153814","approval":false},{"sender":"henrika@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"should be: content/browser/render_host/media","disapproval":false,"date":"2011-12-07 10:27:55.714265","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"All comments addressed and uploaded.\n\nHenrik - in addition to your comments, you sent a reply which is missing context: \"should be: content/browser/render_host/media\".\nCan you point out where I need to fix?\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/renderer_host/media/audio_input_renderer_host.cc\nFile content/browser/renderer_host/media/audio_input_renderer_host.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/renderer_host/media/audio_input_renderer_host.cc#newcode249\ncontent/browser/renderer_host/media/audio_input_renderer_host.cc:249: resource_context_->audio_manager(),\nOn 2011/12/07 10:26:43, henrika1 wrote:\n> Do we need the full resource context here or can we inject only the manager\n> instead?\n\nOnly the manager is being injected... am I misunderstanding?\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/renderer/media/webrtc_audio_device_unittest.cc\nFile content/renderer/media/webrtc_audio_device_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/renderer/media/webrtc_audio_device_unittest.cc#newcode352\ncontent/renderer/media/webrtc_audio_device_unittest.cc:352: 2000);\nOn 2011/12/07 10:26:43, henrika1 wrote:\n> You will get a comment from Andrew on this one ;-)\n\nAh, yes.  So, I might as well preemptively answer :)\n\nPreviously, the timeout was by default 10 seconds.  This timeout is an 'action timeout' and it was me that originally put it there.  However, I don't think that applying that timeout to an audio stream of a fixed length, and not an action, is the right use of that timer.  We should rather use a fixed timeout.\nSo, the question becomes, how long should the timeout be?\nI picked 2 seconds as random.  Perhaps I should rather pick 500ms as is done in the WinAudioTest tests, which also play audio (see e.g. PCMWaveStreamPlay200HzTone44Kss)?\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc\nFile content/test/webrtc_audio_device_test.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc#newcode131\ncontent/test/webrtc_audio_device_test.cc:131: // Kick of the cleanup process by closing channel. This queues up\nOn 2011/12/07 10:26:43, henrika1 wrote:\n> the\n\nCan you clarify?\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> nit, indent two more?\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager.h#newcode39\nmedia/audio/audio_manager.h:39: // TODO(cpu): Define threading requirements for interacting with AudioManager.\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Still a valid comment?\nNope. Removed.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc\nFile media/audio/audio_manager_base.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode25\nmedia/audio/audio_manager_base.cc:25: #ifndef NDEBUG\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Please add some comments here to explain the purpose of your checks. Thanks.\nThere are comments in the header.  Please let me know if they're not clear enough.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode40\nmedia/audio/audio_manager_base.cc:40: CHECK(audio_thread_.Start());\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Any point in checking Initialized() here to ensure that the thread is running?\naudio_thread_.Start() returns true iff the thread is running.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode77\nmedia/audio/audio_manager_base.cc:77: base::AtomicRefCountInc(&num_active_input_streams_);\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Nice!\nThanks! :)\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_manager_base.cc#newcode100\nmedia/audio/audio_manager_base.cc:100: // Stop() will wait for any posted messages to be processed first.\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Can you add some more information here please. You post a task on the audio\n> thread and then closes the same thread directly after. Even if your design\n> works; is it a good design? To me it feels a bit advanced. Can't it be\n> simplified or can you use any alternative method? If not, why?\n\nWell, this is how the Thread class works, fine or not :) You'll see this pattern all over chrome where the thread class is used - including inside the implementation of Thread::Stop().  As the comment explains, Stop() will not return until all pending messages have been processed, including the one we just posted.\n\nRegarding an alternative method, I'm not sure if you mean 1) an alternative method of waiting for ShutdownOnAudioThread to complete or if 2) we can somehow differently uninitialize the dispatchers. So, I'll answer both.\n\n1) There are other ways such as by using a WaitableEvent, but this is a simpler way that doesn't require any additional synchronization objects to the thread itself. Also, it's really just two lines of code (well, two semicolons), so it's hard to beat with regards to simplicity. ;)\n\n2) The dispatchers are single threaded objects that perform most of their work on the audio thread (and correctly have a lot of DCHECKs to make sure it stays that way).  As such, they really must be torn down from that same thread to keep things robust.  Additionally, the map that holds onto the dispatchers does not have any lock to guard against multithreaded access, so it too must only be accessed from the audio thread, so the\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_controller.h\nFile media/audio/audio_output_controller.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_controller.h#newcode247\nmedia/audio/audio_output_controller.h:247: // Used to post delayed tasks to ourselves that we can cancel.\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Can you add some more details on why you had to introduce this pattern. It is\n> not obvious why it is required. Perhaps add some extended comments in this area\n> in the actual header?\n\nImproved comment.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc\nFile media/audio/audio_output_dispatcher.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc#newcode22\nmedia/audio/audio_output_dispatcher.cc:22: ALLOW_THIS_IN_INITIALIZER_LIST(weak_this_(this)),\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Not sure why this is needed.\n\nIt allows |this| to be used in an initializer list without a warning when you know it is safe to do so.  For more details: http://msdn.microsoft.com/en-us/library/3c594ae3(VS.80).aspx\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.h\nFile media/audio/audio_output_dispatcher.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.h#newcode101\nmedia/audio/audio_output_dispatcher.h:101: // Used to post delayed tasks to ourselves that we can cancel.\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Nit, empty line above comment.\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_proxy.cc\nFile media/audio/audio_output_proxy.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_proxy.cc#newcode92\nmedia/audio/audio_output_proxy.cc:92: // Delete the object now like is done in the Close() implementation of\nOn 2011/12/07 10:08:34, henrika1 wrote:\n> Have to trust you on this part. Don't know the details well enough to comment\n> ;-)\n\nThe Mac, Wave and WASAPI implementations delete themselves by calling manager_->ReleaseOutputStream(this) and most (or even all?) input stream implementations use some form of \"self_deleter\" (see e.g. the Alsa implementation).\n\nSo, the post condition for Close() is that the caller must not touch the object again. This is also true in the implementation as it was, but instead of deleting the object straight away, it delayed it by posting a task to the message queue.  Doing so is however not necessary and has two downsides: It leaves the door open to flakiness, it can delay shutdown since the message queue has to keep running in order to delete the task.","disapproval":false,"date":"2011-12-07 12:26:43.218372","approval":false},{"sender":"henrika@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"http://codereview.chromium.org/8818012/diff/7002/content/browser/renderer_host/media/audio_input_renderer_host.cc\nFile content/browser/renderer_host/media/audio_input_renderer_host.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/renderer_host/media/audio_input_renderer_host.cc#newcode249\ncontent/browser/renderer_host/media/audio_input_renderer_host.cc:249: resource_context_->audio_manager(),\nSorry, I had this question in my head from another file. Please ignore.\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc\nFile content/test/webrtc_audio_device_test.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc#newcode131\ncontent/test/webrtc_audio_device_test.cc:131: // Kick of the cleanup process by closing channel. This queues up\n\"..by closing *the* channel.\"\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc\nFile media/audio/audio_output_dispatcher.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc#newcode22\nmedia/audio/audio_output_dispatcher.cc:22: ALLOW_THIS_IN_INITIALIZER_LIST(weak_this_(this)),\nI meant the weak pointer.","disapproval":false,"date":"2011-12-07 12:48:00.124732","approval":false},{"sender":"xians@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Very impressive! Great work, Tommi.\nLGTM to the AudioManagerLinux.\n\nBR,\n/SX","disapproval":false,"date":"2011-12-07 12:52:18.597755","approval":true},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Latest changes uploaded.\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc\nFile content/test/webrtc_audio_device_test.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/test/webrtc_audio_device_test.cc#newcode131\ncontent/test/webrtc_audio_device_test.cc:131: // Kick of the cleanup process by closing channel. This queues up\nOn 2011/12/07 12:48:01, henrika1 wrote:\n> \"..by closing *the* channel.\"\nah. sorry, refrigerator blindness. Done.\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc\nFile media/audio/audio_output_dispatcher.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/media/audio/audio_output_dispatcher.cc#newcode22\nmedia/audio/audio_output_dispatcher.cc:22: ALLOW_THIS_IN_INITIALIZER_LIST(weak_this_(this)),\nOn 2011/12/07 12:48:01, henrika1 wrote:\n> I meant the weak pointer.\n\nAh.  Here's the comment from the header file:\n\n  // Used to post delayed tasks to ourselves that we can cancel.\n  base::WeakPtrFactory<AudioOutputDispatcher> weak_this_;\n\nThis is important as if we do not do this, the message queue can hold onto the the object and cause the stream objects (and held resources) to be not be deleted at all if MessageLoop::DeletePendingTasks is called and/or cause the object to be deleted at a point in time that's not guaranteed to always be the same, which doesn't have any benefits but is harder to test and debug.\n\nAs a side note, the AudioOutputDispatcher class doesn't really need to be reference counted. Things would be simpler if it wasn't.  Perhaps I can do that refactoring job on a later cl.","disapproval":false,"date":"2011-12-07 14:46:23.402696","approval":false},{"sender":"willchan@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"http://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc\nFile content/browser/resource_context.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc#newcode184\ncontent/browser/resource_context.cc:184: // The AudioManager isn't necessarily initialized with other\nOn 2011/12/06 20:28:48, tommi wrote:\n> On 2011/12/06 17:02:12, willchan wrote:\n> > Can you explain this comment? When is AudioManager initialized then? And why\n> > isn't there a DCHECK(BrowserThread::CurrentlyOn(BrowserThread::IO))?\n> \n> Sorry, this comment isn't correct. I must have forgotten to update it since an\n> early version of the cl.  I'll fix it.\n> \n> When Chrome runs, the audio manager instance is created and owned by the\n> BrowserProcessImpl class.  This always happens on the IO thread and (as you no\n> doubt know) there is a check inside EnsureInitialized() for that.\n> What's different here though, and the reason why there isn't a dcheck here like\n> with the other accessors, is that the audio_manager accessor can be called on\n> other threads than the IO thread.  I suspect that the reason for this is\n> historical since the AudioManager was a singleton with an undefined threading\n> model and anyone could call the instance method at any time and on any thread.\n\nI see. While it's not strictly a problem, it's different from the existing threading model and we should be careful here. ResourceContext is created and owned by ProfileIOData, which will be deleted on the IO thread and thus ResourceContext will get deleted on the IO thread. We need to think carefully about the shutdown case here. Note the shutdown order indicated by http://codesearch.google.com/codesearch#OAMlx_jo-ck/src/content/public/browser/browser_thread.h&exact_package=chromium&q=browser_thread.h&type=cs&l=56. If ResourceContext is used on any thread which outlasts the IO thread, then we have a problem, because ResourceContext may be deleted, and we'll get a use after free.\n\nThis is the reason we have always just forced the accessors to be non-threadsafe and only accessible on the IO thread.","disapproval":false,"date":"2011-12-07 15:29:14.957480","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"On 2011/12/07 15:29:14, willchan wrote:\n> http://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc\n> File content/browser/resource_context.cc (right):\n> \n> http://codereview.chromium.org/8818012/diff/7002/content/browser/resource_context.cc#newcode184\n> content/browser/resource_context.cc:184: // The AudioManager isn't necessarily\n> initialized with other\n> On 2011/12/06 20:28:48, tommi wrote:\n> > On 2011/12/06 17:02:12, willchan wrote:\n> > > Can you explain this comment? When is AudioManager initialized then? And why\n> > > isn't there a DCHECK(BrowserThread::CurrentlyOn(BrowserThread::IO))?\n> > \n> > Sorry, this comment isn't correct. I must have forgotten to update it since an\n> > early version of the cl.  I'll fix it.\n> > \n> > When Chrome runs, the audio manager instance is created and owned by the\n> > BrowserProcessImpl class.  This always happens on the IO thread and (as you no\n> > doubt know) there is a check inside EnsureInitialized() for that.\n> > What's different here though, and the reason why there isn't a dcheck here\n> like\n> > with the other accessors, is that the audio_manager accessor can be called on\n> > other threads than the IO thread.  I suspect that the reason for this is\n> > historical since the AudioManager was a singleton with an undefined threading\n> > model and anyone could call the instance method at any time and on any thread.\n> \n> I see. While it's not strictly a problem, it's different from the existing\n> threading model and we should be careful here. ResourceContext is created and\n> owned by ProfileIOData, which will be deleted on the IO thread and thus\n> ResourceContext will get deleted on the IO thread. We need to think carefully\n> about the shutdown case here. Note the shutdown order indicated by\n> http://codesearch.google.com/codesearch#OAMlx_jo-ck/src/content/public/browser/browser_thread.h&exact_package=chromium&q=browser_thread.h&type=cs&l=56.\n> If ResourceContext is used on any thread which outlasts the IO thread, then we\n> have a problem, because ResourceContext may be deleted, and we'll get a use\n> after free.\n> \n> This is the reason we have always just forced the accessors to be non-threadsafe\n> and only accessible on the IO thread.\n\nAgreed, perhaps this is a slippery slope.  I'm going to go back and take a look at those places where audio_manager() is accessed from the FILE or UI thread.  If it's only from unit tests, then I think that might be easy to fix and this accessor can abide the same rules as all the others.  I'll report back.","disapproval":false,"date":"2011-12-07 15:38:09.211617","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"OK, I made the audio_manager() accessor more strict and it was actually \"only\" the speech code that I had to tweak.\n\nSatish - This means one feature change that might or might not be important.  Can you take a look at the latest change in speech_input_bubble_gtk.cc?\nBasically, there used to be a check for CanShowAudioInputSettings before adding a link to the UI, but now the link is always added.  I don't see a similar check for other platforms, so maybe it's OK and arguably more consistent to simply not have that check at all.  Your call though :)","disapproval":false,"date":"2011-12-08 16:52:38.265800","approval":false},{"sender":"henrika@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"LGTM.","disapproval":false,"date":"2011-12-09 08:57:02.382662","approval":true},{"sender":"satish@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"LGTM. Thanks for doing this Tommi. One reply below, feel free to address it as you see fit either here or in a subsequent CL.\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/speech/speech_input_bubble_gtk.cc\nFile chrome/browser/speech/speech_input_bubble_gtk.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/speech/speech_input_bubble_gtk.cc#newcode141\nchrome/browser/speech/speech_input_bubble_gtk.cc:141: // TODO(tommi): The audio_manager property can only be accessed from the\nWe do this check only for linux because the code to bring up audio settings panel relies on the applications available only in gnome or kde3/kde4 (media/audio/linux/audio_manager_inux.cc). We could either do something fancy like show the link here but start off an IO thread operation to check and hide the link if we can't show the settings UI.. or we can always show this and in the speech input code where we invoke the settings UI show an error dialog if settings UI can't be shown when link was clicked.","disapproval":false,"date":"2011-12-09 11:46:18.993689","approval":true},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"http://codereview.chromium.org/8818012/diff/19001/chrome/browser/speech/speech_input_bubble_gtk.cc\nFile chrome/browser/speech/speech_input_bubble_gtk.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/speech/speech_input_bubble_gtk.cc#newcode141\nchrome/browser/speech/speech_input_bubble_gtk.cc:141: // TODO(tommi): The audio_manager property can only be accessed from the\nOn 2011/12/09 11:46:19, Satish wrote:\n> We do this check only for linux because the code to bring up audio settings\n> panel relies on the applications available only in gnome or kde3/kde4\n> (media/audio/linux/audio_manager_inux.cc). We could either do something fancy\n> like show the link here but start off an IO thread operation to check and hide\n> the link if we can't show the settings UI.. or we can always show this and in\n> the speech input code where we invoke the settings UI show an error dialog if\n> settings UI can't be shown when link was clicked.\n\nOK, thanks for the background.\nI'll take care of it in a followup cl.","disapproval":false,"date":"2011-12-09 13:24:07.070708","approval":false},{"sender":"scherkus@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"awesome!\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/browser_process_impl.cc\nFile chrome/browser/browser_process_impl.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/browser_process_impl.cc#newcode721\nchrome/browser/browser_process_impl.cc:721: if (!audio_manager_.get())\nrm .get()\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/renderer_host/render_process_host_impl.cc\nFile content/browser/renderer_host/render_process_host_impl.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/renderer_host/render_process_host_impl.cc#newcode11\ncontent/browser/renderer_host/render_process_host_impl.cc:11: #include <objbase.h>  // For CoInitialize/CoUninitialize.\nany reason why this got moved up?\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/resource_context.h\nFile content/browser/resource_context.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/resource_context.h#newcode107\ncontent/browser/resource_context.h:107: AudioManager* audio_manager_;\nno ref?\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/renderer/media/webrtc_audio_device_unittest.cc\nFile content/renderer/media/webrtc_audio_device_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/renderer/media/webrtc_audio_device_unittest.cc#newcode352\ncontent/renderer/media/webrtc_audio_device_unittest.cc:352: 2000);\nwas action_timeout_ms not enough or too much?\n\nwould tiny_timeout_ms_ work? (100ms)\n\nperhaps action_timeout_ms() divided by some #?\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode8\nmedia/audio/audio_manager.h:8: #include <string>\nnit: blank lines between <system includes.h> and \"regular chrome includes.h\"\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nwe really shouldn't require refcounting but let's save that for another day\n\nthere's some detangling of object lifetimes and cleanup of stream creation/deletion that has to happen first before we can tackling that beast\n\nmind filing a bug + referencing it in this comment?\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode133\nmedia/audio/audio_manager.h:133: static AudioManager* CreateAudioManager();\ncould we move this to the .cc or do implementors require access to private methods inside AudioManager?\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager_base.h\nFile media/audio/audio_manager_base.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager_base.h#newcode54\nmedia/audio/audio_manager_base.h:54: void Shutdown();\ndocs?\n\nalso I looked through the patch but couldn't find any callers of this method so OOC when we would we manually call Shutdown() as opposed to deleting the object via refcounts?\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller.h\nFile media/audio/audio_output_controller.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller.h#newcode259\nmedia/audio/audio_output_controller.h:259: // shutdown  and force it to wait for the most delayed task.\nremove extra space\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller_unittest.cc\nFile media/audio/audio_output_controller_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller_unittest.cc#newcode104\nmedia/audio/audio_output_controller_unittest.cc:104: AudioOutputController::Create(audio_manager.get(), &event_handler, params,\nnit: .get() not needed for refptr\n\nhere + below\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_proxy_unittest.cc\nFile media/audio/audio_output_proxy_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_proxy_unittest.cc#newcode97\nmedia/audio/audio_output_proxy_unittest.cc:97: return *manager_.get();\nnit: get not required\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_input.h\nFile media/audio/linux/alsa_input.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_input.h#newcode59\nmedia/audio/linux/alsa_input.h:59: AudioManagerLinux* audio_manager_;\ndocument that this is not reffed?\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_output_unittest.cc\nFile media/audio/linux/alsa_output_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_output_unittest.cc#newcode113\nmedia/audio/linux/alsa_output_unittest.cc:113: mock_manager_.get(),\n.get() here and below\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc\nFile media/audio/linux/audio_manager_linux.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc#newcode85\nmedia/audio/linux/audio_manager_linux.cc:85: ++active_output_stream_count_;\nwe should probably re-think this active stream count business at some point\n\ncare to TODOify/file a bug for this stuff?\n\nthings I'm curious about:\n  a) Is it even useful / used?\n  b) If so, are all OSes implementing it?\n  c) Can we converge on a scheme (i.e., input streams call Increase/DecreaseActiveInputStreamCount() while output streams increment on creation then call ReleaseOutputStream() later on)\n  d) Can we make it less error prone (i.e, can the manager handle all of this transparently, perhaps by requiring Stop() to be called on the manager instead of the stream itself)\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc#newcode118\nmedia/audio/linux/audio_manager_linux.cc:118: AudioManagerLinux::AudioManagerLinux() : active_output_stream_count_(0U) {\nnit: collapse into {}\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/mac/audio_low_latency_input_mac_unittest.cc\nFile media/audio/mac/audio_low_latency_input_mac_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/mac/audio_low_latency_input_mac_unittest.cc#newcode90\nmedia/audio/mac/audio_low_latency_input_mac_unittest.cc:90: ~MacAudioInputTest() {}\nvirtual\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_low_latency_input_win_unittest.cc\nFile media/audio/win/audio_low_latency_input_win_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_low_latency_input_win_unittest.cc#newcode92\nmedia/audio/win/audio_low_latency_input_win_unittest.cc:92: if (NULL == audio_man)\nif (!audio_man)\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_low_latency_input_win_unittest.cc#newcode176\nmedia/audio/win/audio_low_latency_input_win_unittest.cc:176: if (!CanRunAudioTests(audio_manager.get()))\n.get() etc\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_output_win_unittest.cc\nFile media/audio/win/audio_output_win_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_output_win_unittest.cc#newcode561\nmedia/audio/win/audio_output_win_unittest.cc:561: EXPECT_TRUE(opened = oas->Open());\nASSERT_TRUE(oas->Open())?\n\nwould do away w/ opened bool","disapproval":false,"date":"2011-12-09 22:47:30.073716","approval":false},{"sender":"scherkus@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"also global nit on using .get() for scoped_refptr<>\n\nwe have operator T*() defined -- might as well use it :)","disapproval":false,"date":"2011-12-09 22:48:40.546417","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Thanks Andrew. Changes uploaded.\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/browser_process_impl.cc\nFile chrome/browser/browser_process_impl.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/chrome/browser/browser_process_impl.cc#newcode721\nchrome/browser/browser_process_impl.cc:721: if (!audio_manager_.get())\nOn 2011/12/09 22:47:30, scherkus wrote:\n> rm .get()\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/renderer_host/render_process_host_impl.cc\nFile content/browser/renderer_host/render_process_host_impl.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/renderer_host/render_process_host_impl.cc#newcode11\ncontent/browser/renderer_host/render_process_host_impl.cc:11: #include <objbase.h>  // For CoInitialize/CoUninitialize.\nOn 2011/12/09 22:47:30, scherkus wrote:\n> any reason why this got moved up?\n\nlint. (os header)\nMaybe we should be using ScopedCOMInitializer here instead.\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/resource_context.h\nFile content/browser/resource_context.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/browser/resource_context.h#newcode107\ncontent/browser/resource_context.h:107: AudioManager* audio_manager_;\nOn 2011/12/09 22:47:30, scherkus wrote:\n> no ref?\n\nI went with the flow on this one.  There are already refcounted objects here without a ref, but it's OK for Chrome's implementation, but users have to be aware.\nOne benefit (well, could actually be a con, see below) of the current approach is that you don't have to #include the full class definition in the cc file and this isn't done for these pointers.  Could it also have something to do with avoiding breaking include rules?  (if that's the case though, then arguably this could be a loophole)\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/renderer/media/webrtc_audio_device_unittest.cc\nFile content/renderer/media/webrtc_audio_device_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/content/renderer/media/webrtc_audio_device_unittest.cc#newcode352\ncontent/renderer/media/webrtc_audio_device_unittest.cc:352: 2000);\nOn 2011/12/09 22:47:30, scherkus wrote:\n> was action_timeout_ms not enough or too much?\n> \n> would tiny_timeout_ms_ work? (100ms)\n> \n> perhaps action_timeout_ms() divided by some #?\n\naction_timeout is 10seconds, which is too long when running all the tests routinely.  I wanted to go with a fixed value since this is an audio file and it's long enough for you to hear a word or two.  A second or even less would do fine too.  I initially used action_timeout_ms() here since tiny was too short and this was the next timeout value in the line.  However, since what we're doing here isn't really an \"action\" I figured having a constant would make more sense.\nI can change it to e.g. action_timeout_ms() / 10 or 5 if you want.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode8\nmedia/audio/audio_manager.h:8: #include <string>\nOn 2011/12/09 22:47:30, scherkus wrote:\n> nit: blank lines between <system includes.h> and \"regular chrome includes.h\"\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nOn 2011/12/09 22:47:30, scherkus wrote:\n> we really shouldn't require refcounting but let's save that for another day\n> \n> there's some detangling of object lifetimes and cleanup of stream\n> creation/deletion that has to happen first before we can tackling that beast\n> \n> mind filing a bug + referencing it in this comment?\n\nWill do. crbug seems to be down at the moment so I'll file one tomorrow.\n\nI started out without reference counting (hence all the audio_manager.get()'s that were still in there) but as the cl grew, I saw that lifetime, thread management, shutdown etc were undefined and using scoped_ptr<> + non-ref pointers, all over the place would be risky.  However, the threading model, usage and teardown is a lot more defined now, so switching from refcounted shouldn't be too hard moving forward.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode133\nmedia/audio/audio_manager.h:133: static AudioManager* CreateAudioManager();\nOn 2011/12/09 22:47:30, scherkus wrote:\n> could we move this to the .cc or do implementors require access to private\n> methods inside AudioManager?\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager_base.h\nFile media/audio/audio_manager_base.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager_base.h#newcode54\nmedia/audio/audio_manager_base.h:54: void Shutdown();\nOn 2011/12/09 22:47:30, scherkus wrote:\n> docs?\n\nAdded.\n\n> \n> also I looked through the patch but couldn't find any callers of this method so\n\nAudioManagerLinux calls it although after my changes there, there is less need to do so.\n\n> OOC when we would we manually call Shutdown() as opposed to deleting the object\n> via refcounts?\n\nOnly in cases where we want to check that we're not leaking something after shutdown or e.g. from tests that verify that the map is empty, thread is not running etc.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller.h\nFile media/audio/audio_output_controller.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller.h#newcode259\nmedia/audio/audio_output_controller.h:259: // shutdown  and force it to wait for the most delayed task.\nOn 2011/12/09 22:47:30, scherkus wrote:\n> remove extra space\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller_unittest.cc\nFile media/audio/audio_output_controller_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_controller_unittest.cc#newcode104\nmedia/audio/audio_output_controller_unittest.cc:104: AudioOutputController::Create(audio_manager.get(), &event_handler, params,\nOn 2011/12/09 22:47:30, scherkus wrote:\n> nit: .get() not needed for refptr\n> \n> here + below\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_proxy_unittest.cc\nFile media/audio/audio_output_proxy_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_output_proxy_unittest.cc#newcode97\nmedia/audio/audio_output_proxy_unittest.cc:97: return *manager_.get();\nOn 2011/12/09 22:47:30, scherkus wrote:\n> nit: get not required\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_input.h\nFile media/audio/linux/alsa_input.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_input.h#newcode59\nmedia/audio/linux/alsa_input.h:59: AudioManagerLinux* audio_manager_;\nOn 2011/12/09 22:47:30, scherkus wrote:\n> document that this is not reffed?\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_output_unittest.cc\nFile media/audio/linux/alsa_output_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/alsa_output_unittest.cc#newcode113\nmedia/audio/linux/alsa_output_unittest.cc:113: mock_manager_.get(),\nOn 2011/12/09 22:47:30, scherkus wrote:\n> .get() here and below\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc\nFile media/audio/linux/audio_manager_linux.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc#newcode85\nmedia/audio/linux/audio_manager_linux.cc:85: ++active_output_stream_count_;\nOn 2011/12/09 22:47:30, scherkus wrote:\n> we should probably re-think this active stream count business at some point\n> \n> care to TODOify/file a bug for this stuff?\n> \n> things I'm curious about:\n>   a) Is it even useful / used?\n\nIt's checked against kMaxOutputStreams above.  Other than that, it looks like a debugging aid.\n\n>   b) If so, are all OSes implementing it?\n\nThis is the only place I've seen it.\n\n>   c) Can we converge on a scheme (i.e., input streams call\n> Increase/DecreaseActiveInputStreamCount() while output streams increment on\n> creation then call ReleaseOutputStream() later on)\n\nI think that's a good idea, provided that it is useful :)  I'll ask leandro and satish about usefulness.\n\n>   d) Can we make it less error prone (i.e, can the manager handle all of this\n> transparently, perhaps by requiring Stop() to be called on the manager instead\n> of the stream itself)\n\n+1 on that.  I'd like to do that on a separate cl if that's alright and with input from the other guys on usefulness etc.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc#newcode118\nmedia/audio/linux/audio_manager_linux.cc:118: AudioManagerLinux::AudioManagerLinux() : active_output_stream_count_(0U) {\nOn 2011/12/09 22:47:30, scherkus wrote:\n> nit: collapse into {}\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/mac/audio_low_latency_input_mac_unittest.cc\nFile media/audio/mac/audio_low_latency_input_mac_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/mac/audio_low_latency_input_mac_unittest.cc#newcode90\nmedia/audio/mac/audio_low_latency_input_mac_unittest.cc:90: ~MacAudioInputTest() {}\nOn 2011/12/09 22:47:30, scherkus wrote:\n> virtual\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_low_latency_input_win_unittest.cc\nFile media/audio/win/audio_low_latency_input_win_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_low_latency_input_win_unittest.cc#newcode92\nmedia/audio/win/audio_low_latency_input_win_unittest.cc:92: if (NULL == audio_man)\nOn 2011/12/09 22:47:30, scherkus wrote:\n> if (!audio_man)\n\nRemoved check.  AudioManager:Create is always called and is basically just a call to new().\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_low_latency_input_win_unittest.cc#newcode176\nmedia/audio/win/audio_low_latency_input_win_unittest.cc:176: if (!CanRunAudioTests(audio_manager.get()))\nOn 2011/12/09 22:47:30, scherkus wrote:\n> .get() etc\n\nDone.\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_output_win_unittest.cc\nFile media/audio/win/audio_output_win_unittest.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/win/audio_output_win_unittest.cc#newcode561\nmedia/audio/win/audio_output_win_unittest.cc:561: EXPECT_TRUE(opened = oas->Open());\nOn 2011/12/09 22:47:30, scherkus wrote:\n> ASSERT_TRUE(oas->Open())?\n> \n> would do away w/ opened bool\n\nWe still need to call Close(), but I've fixed this already on another cl, so I'll revert this bit.","disapproval":false,"date":"2011-12-10 00:11:13.527473","approval":false},{"sender":"scherkus@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"LGTM w/ a nit about a blank line that I think snuck in by mistake\n\nthanks for tackling this!\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nOn 2011/12/10 00:11:14, tommi wrote:\n> On 2011/12/09 22:47:30, scherkus wrote:\n> > we really shouldn't require refcounting but let's save that for another day\n> > \n> > there's some detangling of object lifetimes and cleanup of stream\n> > creation/deletion that has to happen first before we can tackling that beast\n> > \n> > mind filing a bug + referencing it in this comment?\n> \n> Will do. crbug seems to be down at the moment so I'll file one tomorrow.\n> \n> I started out without reference counting (hence all the audio_manager.get()'s\n> that were still in there) but as the cl grew, I saw that lifetime, thread\n> management, shutdown etc were undefined and using scoped_ptr<> + non-ref\n> pointers, all over the place would be risky.  However, the threading model,\n> usage and teardown is a lot more defined now, so switching from refcounted\n> shouldn't be too hard moving forward.\n\nagree 100%\n\nhttp://codereview.chromium.org/8818012/diff/29001/media/audio/audio_manager.cc\nFile media/audio/audio_manager.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/29001/media/audio/audio_manager.cc#newcode1\nmedia/audio/audio_manager.cc:1: \n!!!","disapproval":false,"date":"2011-12-10 00:16:51.730141","approval":true},{"sender":"scherkus@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"final note: in case major stuff has shifted around it'd probably be a good idea to make sure the CL description still matches the end result of the patch :)","disapproval":false,"date":"2011-12-10 00:17:51.535171","approval":false},{"sender":"willchan@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"ResourceContext is fine by me\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/browser_process_impl.h\nFile chrome/browser/browser_process_impl.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/browser_process_impl.h#newcode290\nchrome/browser/browser_process_impl.h:290: scoped_refptr<AudioManager> audio_manager_;\nWhy is this refcounted? And if this is used on the IO thread, perhaps you should make sure the destruction order is such that it gets destroyed before the IO thread gets joined.\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc\nFile chrome/browser/profiles/profile_io_data.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc#newcode500\nchrome/browser/profiles/profile_io_data.cc:500: new media_stream::MediaStreamManager(g_browser_process->audio_manager()));\nCan you make audio_manager get passed in on the UI thread? There's actually a small race since g_browser_process is a UI thread object and we're accessing it on the IO thread. If the process shutdown immediately, it's actually theoretically possible for this to be a use after free.\n\nAlso, I like to push use of globals as close to main() as possible, and pass them into code.","disapproval":false,"date":"2011-12-10 00:27:33.511121","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"http://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nOn 2011/12/10 00:16:52, scherkus wrote:\n> On 2011/12/10 00:11:14, tommi wrote:\n> > On 2011/12/09 22:47:30, scherkus wrote:\n> > > we really shouldn't require refcounting but let's save that for another day\n> > > \n> > > there's some detangling of object lifetimes and cleanup of stream\n> > > creation/deletion that has to happen first before we can tackling that beast\n> > > \n> > > mind filing a bug + referencing it in this comment?\n> > \n> > Will do. crbug seems to be down at the moment so I'll file one tomorrow.\n> > \n> > I started out without reference counting (hence all the audio_manager.get()'s\n> > that were still in there) but as the cl grew, I saw that lifetime, thread\n> > management, shutdown etc were undefined and using scoped_ptr<> + non-ref\n> > pointers, all over the place would be risky.  However, the threading model,\n> > usage and teardown is a lot more defined now, so switching from refcounted\n> > shouldn't be too hard moving forward.\n> \n> agree 100%\n\nbug filed and comment added: crbug.com/107087\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc\nFile media/audio/linux/audio_manager_linux.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc#newcode85\nmedia/audio/linux/audio_manager_linux.cc:85: ++active_output_stream_count_;\nbug filed: crbug.com/107088\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc\nFile chrome/browser/profiles/profile_io_data.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc#newcode500\nchrome/browser/profiles/profile_io_data.cc:500: new media_stream::MediaStreamManager(g_browser_process->audio_manager()));\nOn 2011/12/10 00:27:33, willchan wrote:\n> Can you make audio_manager get passed in on the UI thread? There's actually a\n> small race since g_browser_process is a UI thread object and we're accessing it\n> on the IO thread. If the process shutdown immediately, it's actually\n> theoretically possible for this to be a use after free.\n\nJust so that I understand - do you mean that g_browser_process might possibly be invalid or that the audio manager might be used after BrowserProcessImpl releases its reference?\n\nWhat I'll do then is to fetch the audio_manager inside InitializeOnUIThread and pass it to here via profile_params_.  Sounds reasonable?\n\n> \n> Also, I like to push use of globals as close to main() as possible, and pass\n> them into code.\n\nIs there perhaps a better way to share an object across more than one ResourceContext instances than to keep it with BrowserProcessImpl?  If there is, I can move the audio manager's home when I make the change to not have the audio manager ref counted.\n\nhttp://codereview.chromium.org/8818012/diff/29001/media/audio/audio_manager.cc\nFile media/audio/audio_manager.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/29001/media/audio/audio_manager.cc#newcode1\nmedia/audio/audio_manager.cc:1: \nOn 2011/12/10 00:16:52, scherkus wrote:\n> !!!\n\nDone. thanks!!!","disapproval":false,"date":"2011-12-10 09:59:57.015112","approval":false},{"sender":"tommi@chromium.org","recipients":["reply@chromiumcodereview.appspotmail.com"],"text":"Heads up - I need to rebase today as there have been several changes in\nthese files.\nI'll force gcl to upload all files in case some of them haven't changed so\nthat you can review the diff after the rebase if further changes are needed.\n\nOn Sat, Dec 10, 2011 at 10:59 AM, <tommi@chromium.org> wrote:\n\n>\n> http://codereview.chromium.**org/8818012/diff/19001/media/**\n> audio/audio_manager.h<http://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h>\n> File media/audio/audio_manager.h (right):\n>\n> http://codereview.chromium.**org/8818012/diff/19001/media/**\n> audio/audio_manager.h#**newcode24<http://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode24>\n> media/audio/audio_manager.h:**24: : public\n> base::RefCountedThreadSafe<**AudioManager> {\n> On 2011/12/10 00:16:52, scherkus wrote:\n>\n>> On 2011/12/10 00:11:14, tommi wrote:\n>> > On 2011/12/09 22:47:30, scherkus wrote:\n>> > > we really shouldn't require refcounting but let's save that for\n>>\n> another day\n>\n>> > >\n>> > > there's some detangling of object lifetimes and cleanup of stream\n>> > > creation/deletion that has to happen first before we can tackling\n>>\n> that beast\n>\n>> > >\n>> > > mind filing a bug + referencing it in this comment?\n>> >\n>> > Will do. crbug seems to be down at the moment so I'll file one\n>>\n> tomorrow.\n>\n>> >\n>> > I started out without reference counting (hence all the\n>>\n> audio_manager.get()'s\n>\n>> > that were still in there) but as the cl grew, I saw that lifetime,\n>>\n> thread\n>\n>> > management, shutdown etc were undefined and using scoped_ptr<> +\n>>\n> non-ref\n>\n>> > pointers, all over the place would be risky.  However, the threading\n>>\n> model,\n>\n>> > usage and teardown is a lot more defined now, so switching from\n>>\n> refcounted\n>\n>> > shouldn't be too hard moving forward.\n>>\n>\n>  agree 100%\n>>\n>\n> bug filed and comment added: crbug.com/107087\n>\n>\n> http://codereview.chromium.**org/8818012/diff/19001/media/**\n> audio/linux/audio_manager_**linux.cc<http://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc>\n> File media/audio/linux/audio_**manager_linux.cc (right):\n>\n> http://codereview.chromium.**org/8818012/diff/19001/media/**\n> audio/linux/audio_manager_**linux.cc#newcode85<http://codereview.chromium.org/8818012/diff/19001/media/audio/linux/audio_manager_linux.cc#newcode85>\n> media/audio/linux/audio_**manager_linux.cc:85:\n> ++active_output_stream_count_;\n> bug filed: crbug.com/107088\n>\n>\n> http://codereview.chromium.**org/8818012/diff/29001/chrome/**\n> browser/profiles/profile_io_**data.cc<http://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc>\n> File chrome/browser/profiles/**profile_io_data.cc (right):\n>\n> http://codereview.chromium.**org/8818012/diff/29001/chrome/**\n> browser/profiles/profile_io_**data.cc#newcode500<http://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc#newcode500>\n> chrome/browser/profiles/**profile_io_data.cc:500: new\n> media_stream::**MediaStreamManager(g_browser_**process->audio_manager()));\n> On 2011/12/10 00:27:33, willchan wrote:\n>\n>> Can you make audio_manager get passed in on the UI thread? There's\n>>\n> actually a\n>\n>> small race since g_browser_process is a UI thread object and we're\n>>\n> accessing it\n>\n>> on the IO thread. If the process shutdown immediately, it's actually\n>> theoretically possible for this to be a use after free.\n>>\n>\n> Just so that I understand - do you mean that g_browser_process might\n> possibly be invalid or that the audio manager might be used after\n> BrowserProcessImpl releases its reference?\n>\n> What I'll do then is to fetch the audio_manager inside\n> InitializeOnUIThread and pass it to here via profile_params_.  Sounds\n> reasonable?\n>\n>\n>\n>  Also, I like to push use of globals as close to main() as possible,\n>>\n> and pass\n>\n>> them into code.\n>>\n>\n> Is there perhaps a better way to share an object across more than one\n> ResourceContext instances than to keep it with BrowserProcessImpl?  If\n> there is, I can move the audio manager's home when I make the change to\n> not have the audio manager ref counted.\n>\n>\n> http://codereview.chromium.**org/8818012/diff/29001/media/**\n> audio/audio_manager.cc<http://codereview.chromium.org/8818012/diff/29001/media/audio/audio_manager.cc>\n> File media/audio/audio_manager.cc (right):\n>\n> http://codereview.chromium.**org/8818012/diff/29001/media/**\n> audio/audio_manager.cc#**newcode1<http://codereview.chromium.org/8818012/diff/29001/media/audio/audio_manager.cc#newcode1>\n> media/audio/audio_manager.cc:**1:\n> On 2011/12/10 00:16:52, scherkus wrote:\n>\n>> !!!\n>>\n>\n> Done. thanks!!!\n>\n> http://codereview.chromium.**org/8818012/<http://codereview.chromium.org/8818012/>\n>\n","disapproval":false,"date":"2011-12-12 11:03:13.355572","approval":false},{"sender":"tommi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"On 2011/12/10 00:27:33, willchan wrote:\n> ResourceContext is fine by me\n> \n> http://codereview.chromium.org/8818012/diff/29001/chrome/browser/browser_process_impl.h\n> File chrome/browser/browser_process_impl.h (right):\n> \n> http://codereview.chromium.org/8818012/diff/29001/chrome/browser/browser_process_impl.h#newcode290\n> chrome/browser/browser_process_impl.h:290: scoped_refptr<AudioManager>\n> audio_manager_;\n> Why is this refcounted? And if this is used on the IO thread, perhaps you should\n> make sure the destruction order is such that it gets destroyed before the IO\n> thread gets joined.\n> \n> http://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc\n> File chrome/browser/profiles/profile_io_data.cc (right):\n> \n> http://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc#newcode500\n> chrome/browser/profiles/profile_io_data.cc:500: new\n> media_stream::MediaStreamManager(g_browser_process->audio_manager()));\n> Can you make audio_manager get passed in on the UI thread? There's actually a\n> small race since g_browser_process is a UI thread object and we're accessing it\n> on the IO thread. If the process shutdown immediately, it's actually\n> theoretically possible for this to be a use after free.\n> \n> Also, I like to push use of globals as close to main() as possible, and pass\n> them into code.\n\nHey Will - I've updated ProfileIOData to access the audio_manager() only on the UI thread.  See the changes in diff '8' (should be only 3 files).","disapproval":false,"date":"2011-12-12 16:07:48.097072","approval":false},{"sender":"willchan@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"LGTM!\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h\nFile media/audio/audio_manager.h (right):\n\nhttp://codereview.chromium.org/8818012/diff/19001/media/audio/audio_manager.h#newcode24\nmedia/audio/audio_manager.h:24: : public base::RefCountedThreadSafe<AudioManager> {\nOn 2011/12/10 09:59:57, tommi wrote:\n> On 2011/12/10 00:16:52, scherkus wrote:\n> > On 2011/12/10 00:11:14, tommi wrote:\n> > > On 2011/12/09 22:47:30, scherkus wrote:\n> > > > we really shouldn't require refcounting but let's save that for another\n> day\n> > > > \n> > > > there's some detangling of object lifetimes and cleanup of stream\n> > > > creation/deletion that has to happen first before we can tackling that\n> beast\n> > > > \n> > > > mind filing a bug + referencing it in this comment?\n> > > \n> > > Will do. crbug seems to be down at the moment so I'll file one tomorrow.\n> > > \n> > > I started out without reference counting (hence all the\n> audio_manager.get()'s\n> > > that were still in there) but as the cl grew, I saw that lifetime, thread\n> > > management, shutdown etc were undefined and using scoped_ptr<> + non-ref\n> > > pointers, all over the place would be risky.  However, the threading model,\n> > > usage and teardown is a lot more defined now, so switching from refcounted\n> > > shouldn't be too hard moving forward.\n> > \n> > agree 100%\n> \n> bug filed and comment added: crbug.com/107087\n\nThis plan sounds great to me! It looks like as long as the BrowserProcessImpl destroys it after the other threads are destroyed, then we shouldn't have any dangling pointers.\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc\nFile chrome/browser/profiles/profile_io_data.cc (right):\n\nhttp://codereview.chromium.org/8818012/diff/29001/chrome/browser/profiles/profile_io_data.cc#newcode500\nchrome/browser/profiles/profile_io_data.cc:500: new media_stream::MediaStreamManager(g_browser_process->audio_manager()));\nOn 2011/12/10 09:59:57, tommi wrote:\n> On 2011/12/10 00:27:33, willchan wrote:\n> > Can you make audio_manager get passed in on the UI thread? There's actually a\n> > small race since g_browser_process is a UI thread object and we're accessing\n> it\n> > on the IO thread. If the process shutdown immediately, it's actually\n> > theoretically possible for this to be a use after free.\n> \n> Just so that I understand - do you mean that g_browser_process might possibly be\n> invalid or that the audio manager might be used after BrowserProcessImpl\n> releases its reference?\n> \n> What I'll do then is to fetch the audio_manager inside InitializeOnUIThread and\n> pass it to here via profile_params_.  Sounds reasonable?\n\nSounds great and your change looks great to me.\n\n> \n> > \n> > Also, I like to push use of globals as close to main() as possible, and pass\n> > them into code.\n> \n> Is there perhaps a better way to share an object across more than one\n> ResourceContext instances than to keep it with BrowserProcessImpl?  If there is,\n> I can move the audio manager's home when I make the change to not have the audio\n> manager ref counted.","disapproval":false,"date":"2011-12-12 16:44:04.416540","approval":true},{"sender":"avi@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"owner rubberstamp lgtm","disapproval":false,"date":"2011-12-12 17:28:34.709846","approval":true},{"sender":"commit-bot@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"CQ is trying da patch. Follow status at\nhttps://chromium-status.appspot.com/cq/tommi@chromium.org/8818012/38094","disapproval":false,"date":"2011-12-12 18:24:56.248245","approval":false},{"sender":"commit-bot@chromium.org","recipients":["tommi@chromium.org","henrika@chromium.org","scherkus@chromium.org","satish@chromium.org","avi@chromium.org","willchan@chromium.org","xians@chromium.org","robert.nagy@gmail.com","chromium-reviews@chromium.org","jstritar+watch@chromium.org","hclam+watch@chromium.org","dpranke-watch+content@chromium.org","ddorwin+watch@chromium.org","fischman+watch@chromium.org","jam@chromium.org","acolwell+watch@chromium.org","annacc+watch@chromium.org","mihaip+watch@chromium.org","joi+watch-content@chromium.org","aa@chromium.org","darin-cc@chromium.org","phajdan.jr@chromium.org","vrk@chromium.org","pam+watch@chromium.org","scherkus@chromium.org","ihf+watch@chromium.org"],"text":"Can't process patch for file media/audio/audio_output_proxy.h.\nFile's status is None, patchset upload is incomplete.","disapproval":false,"date":"2011-12-12 18:25:10.276102","approval":false}],"owner_email":"tommi@chromium.org","private":false,"base_url":"svn://svn.chromium.org/chrome/trunk/src/","owner":"tommi","subject":"Remove the AudioManager singleton.","created":"2011-12-06 14:14:01.392439","patchsets":[1,7002,9002,11009,19001,29001,29010,37001,42009,38094],"modified":"2011-12-12 21:50:03.440563","closed":true,"commit":false,"issue":8818012}