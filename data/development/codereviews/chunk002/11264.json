{"description":"Add a third flavor to response header persistence.\r\nXMLHttpRequest response headers should not contain Set-Cookie or Set-Cookie2 headers.\r\n","cc":["chromium-reviews@googlegroups.com"],"reviewers":["darin@chromium.org","deanm@chromium.org"],"messages":[{"sender":"deanm@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"Just skimmed it, looks really good over all.  Removing the true / false parameter is nice even without the additional mode, because it makes the callers much more clear.\n\nhttp://codereview.chromium.org/11264/diff/1/4\nFile net/http/http_response_headers.cc (right):\n\nhttp://codereview.chromium.org/11264/diff/1/4#newcode69\nLine 69: // over IPC.\nMaybe say why, that we want to filter http only cookies, but instead we're just filtering all cookies, because we don't want to leak this knowledge into the renderer.\n\nhttp://codereview.chromium.org/11264/diff/1/4#newcode108\nLine 108: switch (options) {\nI think a switch for 2 cases is overkill.\n\nhttp://codereview.chromium.org/11264/diff/1/4#newcode120\nLine 120: // this just copies the status line w/ terminator\nI saw this code before and thought it was a little bit sketchy.  Might just want to improve the comment, noting that raw_headers_ has embedded nulls, and we want the substring before the first null.  I realize this isn't your code.\n\nhttp://codereview.chromium.org/11264/diff/1/4#newcode135\nLine 135: // includes terminator\n// We write comments like this.\n\nRealize it isn't your code, but might as well clean it up.\n\nhttp://codereview.chromium.org/11264/diff/1/4#newcode630\nLine 630: // statically cached hash_set to avoid duplicated work?\nShould this be a TODO?\n\nhttp://codereview.chromium.org/11264/diff/1/5\nFile net/http/http_response_headers.h (right):\n\nhttp://codereview.chromium.org/11264/diff/1/5#newcode53\nLine 53: // Appends a representation of this object to the given pickle.  If options equals\n80 cols\n\nhttp://codereview.chromium.org/11264/diff/1/5#newcode256\nLine 256: // Returns the headers that should not be passed to IPC requests.\nCould you improve this comment a bit.  Which headers?  Why are they special?","disapproval":false,"date":"2008-11-19 17:04:59.742391","approval":false},{"sender":"darin@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"Do we need this change given:\nhttp://trac.webkit.org/changeset/38566\nhttps://bugs.webkit.org/show_bug.cgi?id=10957\n\nhttp://codereview.chromium.org/11264/diff/1/5\nFile net/http/http_response_headers.h (right):\n\nhttp://codereview.chromium.org/11264/diff/1/5#newcode50\nLine 50: PERSIST_FOR_IPC = 2,\nit is a little strange to mention things like IPC here in the HttpCache code.  that implies knowledge of chrome internals, which this layer knows nothing of otherwise.  is there a better way to describe what this alternative mode is doing?","disapproval":false,"date":"2008-11-19 17:11:37.607612","approval":false},{"sender":"deanm@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"http://codereview.chromium.org/11264/diff/1/4\nFile net/http/http_response_headers.cc (right):\n\nhttp://codereview.chromium.org/11264/diff/1/4#newcode110\nLine 110: GetNonIPCHeaders(&filtered_headers);\nI guess now this should be GetCookieHeaders, and this should be PERSIST_WITHOUT_COOKIES or something.\n\nhttp://codereview.chromium.org/11264/diff/1/5\nFile net/http/http_response_headers.h (right):\n\nhttp://codereview.chromium.org/11264/diff/1/5#newcode50\nLine 50: PERSIST_FOR_IPC = 2,\nAs Darin pointed out, it's definitely important to keep these components conceptually isolated, so FOR_IPC doesn't make sense here.\n\nMaybe a better name would just be to make it explicit as to what it's doing.  PERSIST_WITHOUT_COOKIE_HEADERS ?  I'm not familiar with the code that much, I'm guessing _RAW is everything, _CACHE has some things filtered, is your _IPC the same filtering as _CACHE plus cookies?  Maybe that should be denoted some how, like FOR_CACHE_WITHOUT_COOKIES.  Dunno.\n\nhttp://codereview.chromium.org/11264/diff/1/5#newcode257\nLine 257: static void GetNonIPCHeaders(HeaderSet* header_names);\nOn second reading, this name is really strange.  Do you mean GetHeadersThatAreUnsafeForIPC?","disapproval":false,"date":"2008-11-19 17:34:50.185351","approval":false},{"sender":"deanm@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"Looks better, still some nits.  It's up to Darin on the real code.\n\nhttp://codereview.chromium.org/11264/diff/408/18\nFile chrome/common/render_messages.h (right):\n\nhttp://codereview.chromium.org/11264/diff/408/18#newcode1392\nLine 1392: net::HttpResponseHeaders::PERSIST_WITHOUT_SENSITIVE_HEADERS);\np->Persist(\n    m, net:: ... );\n\nhttp://codereview.chromium.org/11264/diff/408/16\nFile net/http/http_response_headers.cc (right):\n\nhttp://codereview.chromium.org/11264/diff/408/16#newcode112\nLine 112: }\nI find the switch here strange.  I liked it better the way you had it I think.  Can you just early terminate on RAW, and then handle the case for _CACHE / SENESITVE.  filter_headers will be empty in the else case.","disapproval":false,"date":"2008-11-19 22:13:38.516272","approval":false},{"sender":"marius.schilder@gmail.com","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"On 2008/11/19 22:13:38, Dean McNamee wrote:\n> Looks better, still some nits.  It's up to Darin on the real code.\n> \n> http://codereview.chromium.org/11264/diff/408/18\n> File chrome/common/render_messages.h (right):\n> \n> http://codereview.chromium.org/11264/diff/408/18#newcode1392\n> Line 1392: net::HttpResponseHeaders::PERSIST_WITHOUT_SENSITIVE_HEADERS);\n> p->Persist(\n>     m, net:: ... );\n\ndone\n\n> \n> http://codereview.chromium.org/11264/diff/408/16\n> File net/http/http_response_headers.cc (right):\n> \n> http://codereview.chromium.org/11264/diff/408/16#newcode112\n> Line 112: }\n> I find the switch here strange.  I liked it better the way you had it I think. \n> Can you just early terminate on RAW, and then handle the case for _CACHE /\n> SENESITVE.  filter_headers will be empty in the else case.\n\ndone. Added a comment and NOREACHED for else as well. Overkill?","disapproval":false,"date":"2008-11-19 22:29:38.220956","approval":false},{"sender":"marius.schilder@gmail.com","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"On 2008/11/19 17:11:37, darin wrote:\n> Do we need this change given:\n> http://trac.webkit.org/changeset/38566\n> https://bugs.webkit.org/show_bug.cgi?id=10957\n\nI think it still has merit to filter on the trusted end of the IPC, whether webkit also filters or not.\n\n> \n> http://codereview.chromium.org/11264/diff/1/5\n> File net/http/http_response_headers.h (right):\n> \n> http://codereview.chromium.org/11264/diff/1/5#newcode50\n> Line 50: PERSIST_FOR_IPC = 2,\n> it is a little strange to mention things like IPC here in the HttpCache code. \n> that implies knowledge of chrome internals, which this layer knows nothing of\n> otherwise.  is there a better way to describe what this alternative mode is\n> doing?\n\nfixed","disapproval":false,"date":"2008-11-19 22:30:27.950952","approval":false},{"sender":"deanm@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"Style wise looks ok by me.  Darin on the rest.\n\nhttp://codereview.chromium.org/11264/diff/412/416\nFile net/http/http_response_headers.h (right):\n\nhttp://codereview.chromium.org/11264/diff/412/416#newcode257\nLine 257: // e.g. Set-Cookie, Set-Cookie2.\nit actually returns them lower cased, right?  So maybe your example is misleading.","disapproval":false,"date":"2008-11-19 22:32:42.149074","approval":false},{"sender":"darin@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"http://codereview.chromium.org/11264/diff/411/23\nFile net/http/http_response_headers.h (right):\n\nhttp://codereview.chromium.org/11264/diff/411/23#newcode50\nLine 50: PERSIST_WITHOUT_SENSITIVE_HEADERS = 2,\nhmm... vaguely naming this seems not so great.  i think it is better to be specific here so that the caller, who needs to make the choice about renderer security, can be the one making the policy decision about what \"sensitive headers\" means.\n\nso, i would name these like so:\n\n  PERSIST_ALL,\n  PERSIST_SANS_COOKIES,\n  PERSIST_SANS_TRANSIENTS\n\nyou could comment that 'cookies' are a subset of 'transients', where transients also include the hop-by-hop response headers (as defined by RFC 2616), response headers deemed non-cacheable by the server, and auth challenge response headers.\n\nwe could also break this down further into an exclusive set:\n\n  PERSIST_ALL,\n  PERSIST_SANS_COOKIES,\n  PERSIST_SANS_CHALLENGES,\n  PERSIST_SANS_HOP_BY_HOP,\n  PERSIST_SANS_NON_CACHEABLE,\n\nthen the HttpCache code could combine all of these to get its desired behavior.\n\ni'm fine with either breakdown of flags.","disapproval":false,"date":"2008-11-19 22:35:42.013718","approval":false},{"sender":"marius.schilder@gmail.com","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"On 2008/11/19 22:32:42, Dean McNamee wrote:\n> Style wise looks ok by me.  Darin on the rest.\n> \n> http://codereview.chromium.org/11264/diff/412/416\n> File net/http/http_response_headers.h (right):\n> \n> http://codereview.chromium.org/11264/diff/412/416#newcode257\n> Line 257: // e.g. Set-Cookie, Set-Cookie2.\n> it actually returns them lower cased, right?  So maybe your example is\n> misleading.\n\nyeah, habit. The actual matching is done case-insensitive due to lower-casing the other input. I'll update the comment to lower-case.","disapproval":false,"date":"2008-11-19 22:40:25.263965","approval":false},{"sender":"marius.schilder@gmail.com","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"On 2008/11/19 22:35:42, darin wrote:\n> http://codereview.chromium.org/11264/diff/411/23\n> File net/http/http_response_headers.h (right):\n> \n> http://codereview.chromium.org/11264/diff/411/23#newcode50\n> Line 50: PERSIST_WITHOUT_SENSITIVE_HEADERS = 2,\n> hmm... vaguely naming this seems not so great.  i think it is better to be\n> specific here so that the caller, who needs to make the choice about renderer\n> security, can be the one making the policy decision about what \"sensitive\n> headers\" means.\n> \n> so, i would name these like so:\n> \n>   PERSIST_ALL,\n>   PERSIST_SANS_COOKIES,\n>   PERSIST_SANS_TRANSIENTS\n> \n> you could comment that 'cookies' are a subset of 'transients', where transients\n> also include the hop-by-hop response headers (as defined by RFC 2616), response\n> headers deemed non-cacheable by the server, and auth challenge response headers.\n> \n> we could also break this down further into an exclusive set:\n> \n>   PERSIST_ALL,\n>   PERSIST_SANS_COOKIES,\n>   PERSIST_SANS_CHALLENGES,\n>   PERSIST_SANS_HOP_BY_HOP,\n>   PERSIST_SANS_NON_CACHEABLE,\n> \n> then the HttpCache code could combine all of these to get its desired behavior.\n\nOk, i took the latter suggestion and broke the options down to bits. Not sure whether the bitmask/const int approach is clearer than say a PersistOptions object. I see either approach in the codebase..\n\n> \n> i'm fine with either breakdown of flags.","disapproval":false,"date":"2008-11-20 02:37:50.896358","approval":false},{"sender":"darin@chromium.org","recipients":["marius.schilder@gmail.com","darin@chromium.org","deanm@chromium.org","chromium-reviews@googlegroups.com"],"text":"LGTM !","disapproval":false,"date":"2008-11-20 03:50:17.889259","approval":true}],"owner_email":"marius.schilder@gmail.com","private":false,"base_url":"http://src.chromium.org/svn/trunk/src/","owner":"mschilder","subject":"Drop Set-Cookie from XHR response headers","created":"2008-11-19 04:26:47.288251","patchsets":[1,402,408,411,412,419,420,426],"modified":"2011-05-09 13:15:57.602169","closed":true,"commit":false,"issue":11264}