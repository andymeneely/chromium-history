# See http://help.github.com/ignore-files/ for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the big data set in our root
/realdata/*

# Ignore vagrant machine
/.vagrant/*

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*.log
/tmp
/test/tmp
/test/version_tmp

#Ignore editor swaps
*.swp
*.swo

#Ignore downloaded gems, if any
*.gem
*.rbc

# Ignore mac stuff
.DS_Store

# Ignore some old data sets
/lib/assets/nvdcve*

#Ignore some temp data sets
/data/development/cves/chromium*.csv

# Ignore coverage data
coverage

# Generated documentation
doc/
lib/bundler/man
rdoc
spec/reports

# Config files for which we have default file counterparts
# These can contain sensitive authentication information
config/database.yml
config/data.yml
config/credentials.yml

# Ignoring platform-specific Gemfile.lock
# Yes, this is not supposed to be how it works. But https://github.com/bundler/bundler-features/issues/4 references a long history of complaints and they are fixing this to make Gemfile.lock be more cross-platform. If we don't ignore it, we'll be checking in this file over and over again if we want to work on Windows, Mac, and Linux.
Gemfile.lock

#Ignore temporary csvs
/data/development/tmp/*.csv
/data/development/tmp/*.pdf
/data/development/tmp/*.png

#Ignore nodejs temporary stuff
/node_modules/*
*.pyc
npm-debug.log

# Ignore R stuff
.RData
.Rhistory

# Files that could potentially contain sensitive information
lib/analysis/db.settings.R